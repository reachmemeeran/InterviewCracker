package com.interviewcracker.entity;
// Generated 14 Jun 2022, 09:42:01 by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * CodingTestCase generated by hbm2java
 */
@Entity
@Table(name = "coding_test_case", catalog = "interviewcrackerdb")
public class CodingTestCase implements java.io.Serializable {

	private Integer codingTestCaseId;
	private CodingQuestion codingQuestion;
	private String summary;
	private String description;
	private String answer;
	private Set<StudentCodingTest> studentCodingTests = new HashSet<StudentCodingTest>(0);

	public CodingTestCase() {
	}

	public CodingTestCase(CodingQuestion codingQuestion, String summary, String description, String answer) {
		this.codingQuestion = codingQuestion;
		this.summary = summary;
		this.description = description;
		this.answer = answer;
	}

	public CodingTestCase(CodingQuestion codingQuestion, String summary, String description, String answer,
			Set<StudentCodingTest> studentCodingTests) {
		this.codingQuestion = codingQuestion;
		this.summary = summary;
		this.description = description;
		this.answer = answer;
		this.studentCodingTests = studentCodingTests;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "coding_test_case_id", unique = true, nullable = false)
	public Integer getCodingTestCaseId() {
		return this.codingTestCaseId;
	}

	public void setCodingTestCaseId(Integer codingTestCaseId) {
		this.codingTestCaseId = codingTestCaseId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "coding_question_id", nullable = false)
	public CodingQuestion getCodingQuestion() {
		return this.codingQuestion;
	}

	public void setCodingQuestion(CodingQuestion codingQuestion) {
		this.codingQuestion = codingQuestion;
	}

	@Column(name = "summary", nullable = false, length = 100)
	public String getSummary() {
		return this.summary;
	}

	public void setSummary(String summary) {
		this.summary = summary;
	}

	@Column(name = "description", nullable = false, length = 1000)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "answer", nullable = false, length = 1000)
	public String getAnswer() {
		return this.answer;
	}

	public void setAnswer(String answer) {
		this.answer = answer;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "codingTestCase")
	public Set<StudentCodingTest> getStudentCodingTests() {
		return this.studentCodingTests;
	}

	public void setStudentCodingTests(Set<StudentCodingTest> studentCodingTests) {
		this.studentCodingTests = studentCodingTests;
	}

}
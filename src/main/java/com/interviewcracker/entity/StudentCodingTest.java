package com.interviewcracker.entity;
// Generated 14 Jun 2022, 09:42:01 by Hibernate Tools 4.3.6.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 * StudentCodingTest generated by hbm2java
 */
@Entity
@Table(name = "student_coding_test", catalog = "interviewcrackerdb")
@NamedQueries({
	@NamedQuery(name="StudentCodingTest.findAll", query= "SELECT c FROM StudentCodingTest c ORDER BY c.studentCodingTestId"),
	@NamedQuery(name="StudentCodingTest.findStudentCode", query="SELECT c from StudentCodingTest c where c.studentId=:studentId"),
	@NamedQuery(name="StudentCodingTest.findExerciseStatus", query="SELECT c.status from StudentCodingTest c where c.studentId=:studentId and c.codingQuestionId=:popExerciseId"),
	@NamedQuery(name="StudentCodingTest.findExerciseCode", query="SELECT c.code from StudentCodingTest c where c.studentId=:studentId and c.codingQuestionId=:popExerciseId")
	//@NamedQuery(name = "StudentCodingTest.findPOPLeaders", query = "SELECT c.students, COUNT(c.hitCount) AS POPLeaderCount FROM  StudentCodingTest c "
		//	+ "GROUP BY c.students.studentsId "
		//	+ "ORDER BY POPLeaderCount DESC") 
})
public class StudentCodingTest implements java.io.Serializable {

	private Integer studentCodingTestId;
	private Integer codingQuestionId;
	private CodingTestCase codingTestCase;
	private Students students;
	private Integer studentId;
	private String code;
	private Integer hitCount;
	private Character status;
	

	public StudentCodingTest() {
	}

	public StudentCodingTest(CodingTestCase codingTestCase, Students students) {
		this.codingTestCase = codingTestCase;
		this.students = students;
	}

	public StudentCodingTest(Integer codingQuestionId, CodingTestCase codingTestCase, Students students,
			Integer studentId,String code, Integer hitCount, Character status) {
		this.codingQuestionId = codingQuestionId;
		this.codingTestCase = codingTestCase;
		this.students = students;
		this.studentId = studentId;
		this.code = code;
		this.hitCount = hitCount;
		this.status = status;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "student_coding_test_id", unique = true, nullable = false)
	public Integer getStudentCodingTestId() {
		return this.studentCodingTestId;
	}

	public void setStudentCodingTestId(Integer studentCodingTestId) {
		this.studentCodingTestId = studentCodingTestId;
	}

	@Column(name = "coding_question_id", nullable = false)
	public Integer getCodingQuestionId() {
		return codingQuestionId;
	}

	public void setCodingQuestionId(Integer codingQuestionId) {
		this.codingQuestionId = codingQuestionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "coding_test_case_id", nullable = false)
	public CodingTestCase getCodingTestCase() {
		return this.codingTestCase;
	}

	public void setCodingTestCase(CodingTestCase codingTestCase) {
		this.codingTestCase = codingTestCase;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "students_id", nullable = false)
	public Students getStudents() {
		return this.students;
	}

	public void setStudents(Students students) {
		this.students = students;
	}
	
	@Column(name = "students_id", nullable = false, insertable=false , updatable=false)
	public Integer getStudentId() {
		return studentId;
	}

	public void setStudentId(Integer studentId) {
		this.studentId = studentId;
	}

	@Column(name = "code")
	public String getCode() {
		return code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "hit_count")
	public Integer getHitCount() {
		return this.hitCount;
	}

	public void setHitCount(Integer hitCount) {
		this.hitCount = hitCount;
	}

	@Column(name = "status", length = 1)
	public Character getStatus() {
		return this.status;
	}

	public void setStatus(Character status) {
		this.status = status;
	}

}

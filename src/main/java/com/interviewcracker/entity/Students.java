package com.interviewcracker.entity;
// Generated 14 Jun 2022, 09:42:01 by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Students generated by hbm2java
 */
@Entity
@Table(name = "students", catalog = "interviewcrackerdb", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
@NamedQueries({
	@NamedQuery(name="Students.findAll", query= "SELECT c FROM Students c ORDER BY c.fullname DESC"),
	@NamedQuery(name="Students.findByEmail", query= "SELECT c FROM Students c where c.email=:email"),
	@NamedQuery(name="Students.countAll", query= "SELECT count(c) FROM Students c"),
	@NamedQuery(name="Students.checkLogin", query= "SELECT c FROM Students c WHERE c.email=:email AND c.password=:password")
})
public class Students implements java.io.Serializable {

	private Integer studentsId;
	private String email;
	private String fullname;
	private String password;
	private byte[] profilepic;
	private Set studentCourses = new HashSet(0);
	private Set studentCodings = new HashSet(0);
	private Set studentCodingTests = new HashSet(0);

	public Students() {
	}

	public Students(String email, String fullname, String password) {
		this.email = email;
		this.fullname = fullname;
		this.password = password;
	}

	public Students(String email, String fullname, String password, byte[] profilepic, Set studentCourses,
			Set studentCodings, Set studentCodingTests) {
		this.email = email;
		this.fullname = fullname;
		this.password = password;
		this.profilepic = profilepic;
		this.studentCourses = studentCourses;
		this.studentCodings = studentCodings;
		this.studentCodingTests = studentCodingTests;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "students_id", unique = true, nullable = false)
	public Integer getStudentsId() {
		return this.studentsId;
	}

	public void setStudentsId(Integer studentsId) {
		this.studentsId = studentsId;
	}

	@Column(name = "email", unique = true, nullable = false, length = 64)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "fullname", nullable = false, length = 30)
	public String getFullname() {
		return this.fullname;
	}

	public void setFullname(String fullname) {
		this.fullname = fullname;
	}

	@Column(name = "password", nullable = false, length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "profilepic")
	public byte[] getProfilepic() {
		return this.profilepic;
	}

	public void setProfilepic(byte[] profilepic) {
		this.profilepic = profilepic;
	}

	/*
	 * @OneToMany(fetch = FetchType.LAZY, mappedBy = "students") public Set
	 * getStudentCourses() { return this.studentCourses; }
	 * 
	 * public void setStudentCourses(Set studentCourses) { this.studentCourses =
	 * studentCourses; }
	 * 
	 * @OneToMany(fetch = FetchType.LAZY, mappedBy = "students") public Set
	 * getStudentCodings() { return this.studentCodings; }
	 * 
	 * public void setStudentCodings(Set studentCodings) { this.studentCodings =
	 * studentCodings; }
	 * 
	 * @OneToMany(fetch = FetchType.LAZY, mappedBy = "students") public Set
	 * getStudentCodingTests() { return this.studentCodingTests; }
	 * 
	 * public void setStudentCodingTests(Set studentCodingTests) {
	 * this.studentCodingTests = studentCodingTests; }
	 */

}
